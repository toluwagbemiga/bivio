# Generated by Django 5.2.6 on 2025-10-05 14:43

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('loan_number', models.CharField(max_length=50, unique=True)),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Interest rate at time of loan approval', max_digits=5)),
                ('tenure_days', models.PositiveIntegerField()),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_interest', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Principal + Interest + Fees', max_digits=15)),
                ('monthly_installment', models.DecimalField(decimal_places=2, help_text='Expected monthly repayment amount', max_digits=15)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('disbursed_date', models.DateTimeField(blank=True, null=True)),
                ('first_repayment_date', models.DateField(blank=True, null=True)),
                ('final_repayment_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('disbursed', 'Disbursed'), ('active', 'Active'), ('completed', 'Completed'), ('defaulted', 'Defaulted'), ('written_off', 'Written Off')], default='applied', max_length=20)),
                ('days_past_due', models.PositiveIntegerField(default=0)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=20)),
                ('collateral_type', models.CharField(choices=[('none', 'No Collateral'), ('guarantor', 'Guarantor'), ('pos_device', 'POS Device'), ('inventory', 'Business Inventory'), ('savings', 'Savings Deposit'), ('group', 'Group Guarantee'), ('digital', 'Digital Reputation')], default='none', max_length=20)),
                ('collateral_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('collateral_description', models.TextField(blank=True)),
                ('purpose', models.TextField(help_text='Purpose of the loan')),
                ('business_plan', models.TextField(blank=True, help_text='How loan will be used in business')),
                ('approval_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('enable_auto_deduction', models.BooleanField(default=False, help_text='Automatically deduct percentage from POS transactions')),
                ('auto_deduction_percentage', models.DecimalField(decimal_places=2, default=5, help_text='Percentage of each transaction to deduct for repayment', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('1.00')), django.core.validators.MaxValueValidator(Decimal('50.00'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Loan',
                'verbose_name_plural': 'Loans',
                'db_table': 'loans',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoanProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('min_amount', models.DecimalField(decimal_places=2, help_text='Minimum loan amount in Naira', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('max_amount', models.DecimalField(decimal_places=2, help_text='Maximum loan amount in Naira', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('1000.00'))])),
                ('interest_rate', models.DecimalField(decimal_places=2, help_text='Interest rate percentage per annum', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('interest_type', models.CharField(choices=[('fixed', 'Fixed Rate'), ('reducing', 'Reducing Balance'), ('flat', 'Flat Rate')], default='reducing', max_length=20)),
                ('processing_fee_rate', models.DecimalField(decimal_places=2, default=0, help_text='Processing fee as percentage of loan amount', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('min_tenure_days', models.PositiveIntegerField(default=30, help_text='Minimum loan tenure in days')),
                ('max_tenure_days', models.PositiveIntegerField(default=365, help_text='Maximum loan tenure in days')),
                ('repayment_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], default='weekly', max_length=20)),
                ('min_credit_score', models.PositiveIntegerField(default=300)),
                ('min_monthly_revenue', models.DecimalField(decimal_places=2, default=50000, help_text='Minimum monthly business revenue required', max_digits=15)),
                ('min_business_age_months', models.PositiveIntegerField(default=6, help_text='Minimum business age in months')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Loan Product',
                'verbose_name_plural': 'Loan Products',
                'db_table': 'loan_products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LoanRepayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_reference', models.CharField(max_length=100, unique=True)),
                ('repayment_type', models.CharField(choices=[('scheduled', 'Scheduled Payment'), ('early', 'Early Payment'), ('auto_deduction', 'Auto-deduction'), ('manual', 'Manual Payment'), ('penalty', 'Penalty Payment')], max_length=20)),
                ('scheduled_amount', models.DecimalField(decimal_places=2, help_text='Originally scheduled payment amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('paid_amount', models.DecimalField(decimal_places=2, help_text='Actual amount paid', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('principal_amount', models.DecimalField(decimal_places=2, default=0, help_text='Portion going to principal', max_digits=15)),
                ('interest_amount', models.DecimalField(decimal_places=2, default=0, help_text='Portion going to interest', max_digits=15)),
                ('penalty_amount', models.DecimalField(decimal_places=2, default=0, help_text='Late payment penalty', max_digits=15)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('auto_deduction', 'Auto-deduction from Sales'), ('mobile_money', 'Mobile Money'), ('pos', 'POS Payment')], default='cash', max_length=20)),
                ('transaction_reference', models.CharField(blank=True, max_length=100)),
                ('due_date', models.DateField()),
                ('payment_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('days_late', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Loan Repayment',
                'verbose_name_plural': 'Loan Repayments',
                'db_table': 'loan_repayments',
                'ordering': ['-payment_date'],
            },
        ),
    ]
