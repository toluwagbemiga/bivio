# Generated by Django 5.2.6 on 2025-10-05 14:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid Nigerian phone number', regex='^\\+?234[0-9]{10}$|^0[0-9]{10}$')])),
                ('user_type', models.CharField(choices=[('borrower', 'Borrower (Business Owner)'), ('lender', 'Lender (Bank/MFI)'), ('agent', 'POS Agent'), ('super_agent', 'Super Agent'), ('admin', 'System Admin')], default='borrower', max_length=20)),
                ('verification_status', models.CharField(choices=[('unverified', 'Unverified'), ('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='unverified', max_length=20)),
                ('bvn', models.CharField(blank=True, help_text='Bank Verification Number', max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='BVN must be 11 digits', regex='^[0-9]{11}$')])),
                ('nin', models.CharField(blank=True, help_text='National Identification Number', max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='NIN must be 11 digits', regex='^[0-9]{11}$')])),
                ('is_profile_complete', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_name', models.CharField(max_length=200)),
                ('business_type', models.CharField(choices=[('retail', 'Retail Shop'), ('restaurant', 'Restaurant/Food'), ('pos_agent', 'POS Agent'), ('wholesale', 'Wholesale Trading'), ('services', 'Services'), ('manufacturing', 'Manufacturing'), ('agriculture', 'Agriculture'), ('other', 'Other')], max_length=20)),
                ('business_size', models.CharField(choices=[('micro', 'Micro (1-10 employees)'), ('small', 'Small (11-50 employees)'), ('medium', 'Medium (51-200 employees)')], default='micro', max_length=20)),
                ('business_description', models.TextField(blank=True)),
                ('business_address', models.TextField()),
                ('state', models.CharField(max_length=50)),
                ('lga', models.CharField(help_text='Local Government Area', max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('estimated_monthly_revenue', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated monthly revenue in Naira', max_digits=15, null=True)),
                ('years_in_business', models.PositiveIntegerField(default=0)),
                ('business_registration_number', models.CharField(blank=True, help_text='CAC Registration Number', max_length=100, null=True)),
                ('tax_identification_number', models.CharField(blank=True, help_text='TIN Number', max_length=50, null=True)),
                ('pos_device_serial', models.CharField(blank=True, help_text='POS device serial number if applicable', max_length=100, null=True, unique=True)),
                ('pos_provider', models.CharField(blank=True, help_text='POS service provider (Moniepoint, OPay, etc.)', max_length=100, null=True)),
                ('credit_score', models.PositiveIntegerField(default=0, help_text='Calculated credit score 0-1000')),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('very_high', 'Very High Risk')], default='medium', max_length=20)),
                ('bank_account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=10, null=True)),
                ('account_name', models.CharField(blank=True, max_length=200, null=True)),
                ('emergency_contact_name', models.CharField(max_length=200)),
                ('emergency_contact_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid Nigerian phone number', regex='^\\+?234[0-9]{10}$|^0[0-9]{10}$')])),
                ('emergency_contact_relationship', models.CharField(max_length=100)),
                ('is_business_verified', models.BooleanField(default=False)),
                ('verification_documents_uploaded', models.BooleanField(default=False)),
                ('kyc_completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Business Profile',
                'verbose_name_plural': 'Business Profiles',
                'db_table': 'business_profiles',
            },
        ),
        migrations.CreateModel(
            name='Guarantor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=200)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid Nigerian phone number', regex='^\\+?234[0-9]{10}$|^0[0-9]{10}$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField()),
                ('bvn', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='BVN must be 11 digits', regex='^[0-9]{11}$')])),
                ('relationship_to_borrower', models.CharField(choices=[('family', 'Family Member'), ('friend', 'Friend'), ('business_partner', 'Business Partner'), ('colleague', 'Colleague'), ('other', 'Other')], max_length=20)),
                ('how_long_known', models.PositiveIntegerField(help_text='How long have you known the borrower (in years)?')),
                ('occupation', models.CharField(max_length=200)),
                ('employer', models.CharField(blank=True, max_length=200, null=True)),
                ('monthly_income', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('has_agreed_to_guarantee', models.BooleanField(default=False)),
                ('agreement_signed_at', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('borrower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guarantors', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Guarantor',
                'verbose_name_plural': 'Guarantors',
                'db_table': 'guarantors',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone_number'], name='users_phone_n_a3b1c5_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['bvn'], name='users_bvn_2f18f1_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='users_user_ty_578f8f_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['verification_status'], name='users_verific_ff7924_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['business_type'], name='business_pr_busines_913e42_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['state'], name='business_pr_state_1aa2d3_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['credit_score'], name='business_pr_credit__254b8a_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['risk_level'], name='business_pr_risk_le_74c9f4_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['pos_device_serial'], name='business_pr_pos_dev_c69138_idx'),
        ),
        migrations.AddIndex(
            model_name='guarantor',
            index=models.Index(fields=['bvn'], name='guarantors_bvn_51406f_idx'),
        ),
        migrations.AddIndex(
            model_name='guarantor',
            index=models.Index(fields=['phone_number'], name='guarantors_phone_n_42e395_idx'),
        ),
        migrations.AddIndex(
            model_name='guarantor',
            index=models.Index(fields=['borrower'], name='guarantors_borrowe_d5e983_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='guarantor',
            unique_together={('borrower', 'bvn')},
        ),
    ]
