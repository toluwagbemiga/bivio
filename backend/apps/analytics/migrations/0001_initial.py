# Generated by Django 5.2.6 on 2025-10-05 14:43

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock Alert'), ('high_sales', 'High Sales Alert'), ('low_sales', 'Low Sales Alert'), ('cash_flow_negative', 'Negative Cash Flow'), ('loan_payment_due', 'Loan Payment Due'), ('savings_goal_reached', 'Savings Goal Reached'), ('unusual_activity', 'Unusual Activity'), ('custom', 'Custom Rule')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('metric_field', models.CharField(help_text='Field to monitor (e.g., current_stock, daily_sales)', max_length=100)),
                ('operator', models.CharField(choices=[('gt', 'Greater Than'), ('lt', 'Less Than'), ('eq', 'Equal To'), ('gte', 'Greater Than or Equal'), ('lte', 'Less Than or Equal')], max_length=10)),
                ('threshold_value', models.DecimalField(decimal_places=2, help_text='Value to compare against', max_digits=15)),
                ('send_email', models.BooleanField(default=True)),
                ('send_sms', models.BooleanField(default=False)),
                ('send_push', models.BooleanField(default=True)),
                ('cooldown_hours', models.PositiveIntegerField(default=24, help_text='Hours to wait before sending another alert of same type')),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('trigger_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Alert Rule',
                'verbose_name_plural': 'Alert Rules',
                'db_table': 'alert_rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BusinessInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('sales_trend', 'Sales Trend Analysis'), ('inventory_optimization', 'Inventory Optimization'), ('cash_flow_forecast', 'Cash Flow Forecast'), ('customer_behavior', 'Customer Behavior'), ('profitability', 'Profitability Analysis'), ('risk_assessment', 'Risk Assessment'), ('growth_opportunity', 'Growth Opportunity'), ('cost_optimization', 'Cost Optimization')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('recommendations', models.JSONField(default=list, help_text='List of actionable recommendations')),
                ('priority', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('potential_impact', models.TextField(blank=True, help_text='Expected impact if recommendations are followed')),
                ('estimated_benefit', models.DecimalField(blank=True, decimal_places=2, help_text='Estimated financial benefit in Naira', max_digits=15, null=True)),
                ('model_version', models.CharField(default='v1.0', max_length=50)),
                ('confidence_score', models.FloatField(help_text='AI confidence in this insight', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('data_period_start', models.DateField()),
                ('data_period_end', models.DateField()),
                ('data_sources', models.JSONField(default=list, help_text='List of data sources used for this insight')),
                ('is_viewed', models.BooleanField(default=False)),
                ('is_implemented', models.BooleanField(default=False)),
                ('user_feedback', models.TextField(blank=True)),
                ('user_rating', models.PositiveIntegerField(blank=True, help_text='User rating of insight quality (1-5 stars)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this insight becomes irrelevant', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Insight',
                'verbose_name_plural': 'Business Insights',
                'db_table': 'business_insights',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BusinessMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_sales_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_sales_count', models.PositiveIntegerField(default=0)),
                ('average_transaction_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_cost_of_goods', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('gross_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('gross_profit_margin', models.DecimalField(decimal_places=2, default=0, help_text='Gross profit margin percentage', max_digits=5)),
                ('inventory_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('inventory_turnover', models.DecimalField(decimal_places=2, default=0, help_text='Inventory turnover ratio', max_digits=10)),
                ('unique_customers', models.PositiveIntegerField(default=0)),
                ('repeat_customers', models.PositiveIntegerField(default=0)),
                ('customer_retention_rate', models.DecimalField(decimal_places=2, default=0, help_text='Customer retention percentage', max_digits=5)),
                ('cash_flow', models.DecimalField(decimal_places=2, default=0, help_text='Net cash flow for the period', max_digits=15)),
                ('savings_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('loan_repayments', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('top_selling_products', models.JSONField(default=list, help_text='List of top-selling products with quantities and revenue')),
                ('slow_moving_products', models.JSONField(default=list, help_text='Products with low sales velocity')),
                ('days_active', models.PositiveIntegerField(default=0, help_text='Number of days with transactions in period')),
                ('peak_sales_hour', models.TimeField(blank=True, help_text='Hour with highest sales activity', null=True)),
                ('ai_insights', models.JSONField(default=dict, help_text='AI-generated business insights and recommendations')),
                ('performance_score', models.PositiveIntegerField(default=0, help_text='Overall business performance score (0-100)')),
                ('growth_rate', models.DecimalField(decimal_places=2, default=0, help_text='Growth rate compared to previous period (%)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Metrics',
                'verbose_name_plural': 'Business Metrics',
                'db_table': 'business_metrics',
                'ordering': ['-period_start'],
            },
        ),
        migrations.CreateModel(
            name='CashFlowData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flow_type', models.CharField(choices=[('operating', 'Operating Activities'), ('investing', 'Investing Activities'), ('financing', 'Financing Activities')], max_length=20)),
                ('category', models.CharField(choices=[('sales_revenue', 'Sales Revenue'), ('inventory_purchase', 'Inventory Purchase'), ('loan_disbursement', 'Loan Disbursement'), ('loan_repayment', 'Loan Repayment'), ('savings_deposit', 'Savings Deposit'), ('savings_withdrawal', 'Savings Withdrawal'), ('expenses', 'Business Expenses'), ('taxes', 'Taxes and Fees'), ('other', 'Other')], max_length=30)),
                ('inflow_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('outflow_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('net_flow', models.DecimalField(decimal_places=2, default=0, help_text='Inflow - Outflow', max_digits=15)),
                ('flow_date', models.DateField()),
                ('description', models.TextField(blank=True)),
                ('reference_id', models.CharField(blank=True, help_text='Reference to source transaction/loan/etc.', max_length=100)),
                ('is_predicted', models.BooleanField(default=False, help_text='Whether this is a prediction or actual data')),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence in prediction (if applicable)', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cash Flow Data',
                'verbose_name_plural': 'Cash Flow Data',
                'db_table': 'cash_flow_data',
                'ordering': ['-flow_date'],
            },
        ),
    ]
