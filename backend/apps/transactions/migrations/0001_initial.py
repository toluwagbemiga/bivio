# Generated by Django 5.2.6 on 2025-10-05 14:43

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('sale', 'Sale'), ('return', 'Return'), ('exchange', 'Exchange'), ('service', 'Service Payment'), ('loan_disbursement', 'Loan Disbursement'), ('loan_repayment', 'Loan Repayment'), ('savings_deposit', 'Savings Deposit'), ('savings_withdrawal', 'Savings Withdrawal')], default='sale', max_length=20)),
                ('transaction_number', models.CharField(max_length=50, unique=True)),
                ('reference_number', models.CharField(blank=True, max_length=100)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('pos', 'POS Card'), ('transfer', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('credit', 'Credit')], max_length=20)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('change_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('customer_name', models.CharField(blank=True, max_length=200)),
                ('customer_phone', models.CharField(blank=True, max_length=15)),
                ('customer_email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('ai_category', models.CharField(blank=True, max_length=100)),
                ('ai_confidence', models.FloatField(blank=True, help_text='AI categorization confidence score (0-1)', null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('pos_device_serial', models.CharField(blank=True, max_length=100)),
                ('pos_transaction_id', models.CharField(blank=True, max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('auto_save_amount', models.DecimalField(decimal_places=2, default=0, help_text='Amount automatically saved from this transaction', max_digits=15)),
                ('auto_save_applied', models.BooleanField(default=False)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='TransactionItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('product_name', models.CharField(help_text='Product name at time of transaction', max_length=200)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Unit price at time of transaction', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, help_text='Unit cost at time of transaction', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('line_total', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
            ],
            options={
                'verbose_name': 'Transaction Item',
                'verbose_name_plural': 'Transaction Items',
                'db_table': 'transaction_items',
            },
        ),
    ]
