# Generated by Django 5.2.6 on 2025-10-05 14:43

import django.core.validators
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SavingsAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('account_number', models.CharField(max_length=20, unique=True)),
                ('account_name', models.CharField(max_length=200)),
                ('account_type', models.CharField(choices=[('general', 'General Savings'), ('loan_repayment', 'Loan Repayment Buffer'), ('emergency', 'Emergency Fund'), ('business_growth', 'Business Growth'), ('goal_based', 'Goal-Based Savings')], default='general', max_length=20)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('minimum_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('target_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Savings target amount (optional)', max_digits=15, null=True)),
                ('auto_save_enabled', models.BooleanField(default=False, help_text='Automatically save percentage from transactions')),
                ('auto_save_percentage', models.DecimalField(decimal_places=2, default=5, help_text='Percentage of each transaction to auto-save', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MinValueValidator(Decimal('50.00'))])),
                ('auto_save_minimum', models.DecimalField(decimal_places=2, default=10, help_text='Minimum amount for auto-save to trigger', max_digits=10)),
                ('auto_save_maximum', models.DecimalField(decimal_places=2, default=1000, help_text='Maximum amount for single auto-save', max_digits=10)),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0, help_text='Annual interest rate percentage', max_digits=5)),
                ('last_interest_calculation', models.DateTimeField(blank=True, null=True)),
                ('total_interest_earned', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('frozen', 'Frozen'), ('closed', 'Closed')], default='active', max_length=20)),
                ('is_default', models.BooleanField(default=False, help_text='Default savings account for auto-save')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Savings Account',
                'verbose_name_plural': 'Savings Accounts',
                'db_table': 'savings_accounts',
                'ordering': ['-is_default', 'account_name'],
            },
        ),
        migrations.CreateModel(
            name='SavingsGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('100.00'))])),
                ('current_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('target_date', models.DateField()),
                ('monthly_target', models.DecimalField(decimal_places=2, default=0, help_text='Calculated monthly savings needed', max_digits=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=20)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Savings Goal',
                'verbose_name_plural': 'Savings Goals',
                'db_table': 'savings_goals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SavingsTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_reference', models.CharField(max_length=100, unique=True)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Manual Deposit'), ('withdrawal', 'Withdrawal'), ('auto_save', 'Auto-save from Transaction'), ('interest', 'Interest Payment'), ('penalty', 'Penalty Deduction'), ('transfer_in', 'Transfer In'), ('transfer_out', 'Transfer Out'), ('loan_deduction', 'Loan Collateral Deduction')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Positive for deposits, negative for withdrawals', max_digits=15)),
                ('reference', models.CharField(blank=True, help_text='Reference to source transaction or reason', max_length=200)),
                ('source_transaction_id', models.CharField(blank=True, help_text='ID of source POS transaction for auto-save', max_length=100)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=15)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='completed', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('transaction_date', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Savings Transaction',
                'verbose_name_plural': 'Savings Transactions',
                'db_table': 'savings_transactions',
                'ordering': ['-transaction_date'],
            },
        ),
    ]
